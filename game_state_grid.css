.grid-area {    font-size: 2.5em;
}
.game_state_container {
    background-color: whitesmoke;
    margin: 16px;
    display: grid;
    grid-template-columns: 1fr 1fr;
    grid-template-rows: 1fr 1fr 1fr 1fr 1fr 1fr 1fr 1fr 1fr 1fr 1fr 1fr 1fr 1fr 1fr 1fr 1fr 1fr;
    gap: 0px 0px 0px 0px;
    grid-auto-flow: row;
    grid-template-areas:
        "now previousTime "
        "flashDelay gameFlashDelay"
        "updateDisplayDelay buttonDelay "
        "tiePulseCount gameWinPulseCount"
        "setWinPulseCount matchWinPulseCount"
        "started rotaryPosition "
        "pointFlash prevRotaryPosition"
        "toggle p1PointsMem"
        "tieBreakOnly p2PointsMem "
        "p1GamesMem p2GamesMem"
        "p1SetsMem p2SetsMem"
        "tieLEDsOn playerButton"
        "tieBreak serve"
        "undo rotaryChange"
        "serveSwitch setTieBreakMem"
        "tieBreakMem setTieBreak"
        "player_1_points player_2_points"
        "player_1_sets   player_2_sets  "
        "player_1_games  player_2_games ";
}

.p1PointsMem { grid-area: p1PointsMem; }

.tieBreakOnly { grid-area: tieBreakOnly; }

.p2PointsMem { grid-area: p2PointsMem; }

.p1GamesMem { grid-area: p1GamesMem; }

.p2GamesMem { grid-area: p2GamesMem; }

.p1SetsMem { grid-area: p1SetsMem; }

.p2SetsMem { grid-area: p2SetsMem; }

.toggle { grid-area: toggle; }

.teiBreakOnly { grid-area: teiBreakOnly; }

.p1Matches { grid-area: 1Matches; }

.p2Matches { grid-area: 2Matches; }

.tieLEDsOn { grid-area: tieLEDsOn; }

.setTieBreak { grid-area: setTieBreak; }

.tieBreak { grid-area: tieBreak; }

.serve { grid-area: serve; }

.pointFlash { grid-area: pointFlash; }

.started { grid-area: started; }

.rotaryPosition { grid-area: rotaryPosition; }

.playerButton { grid-area: playerButton; }

.prevRotaryPosition { grid-area: prevRotaryPosition; }

.undo { grid-area: undo; }

.rotaryChange { grid-area: rotaryChange; }

.now { grid-area: now; }

.previousTime { grid-area: previousTime; }

.updateDisplayDelay { grid-area: updateDisplayDelay; }

.buttonDelay { grid-area: buttonDelay; }

.flashDelay { grid-area: flashDelay; }

.gameFlashDelay { grid-area: gameFlashDelay; }

.tiePulseCount { grid-area: tiePulseCount; }

.gameWinPulseCount { grid-area: gameWinPulseCount; }

.setWinPulseCount { grid-area: setWinPulseCount; }

.matchWinPulseCount { grid-area: matchWinPulseCount; }

.serveSwitch { grid-area: serveSwitch; }

.setTieBreakMem { grid-area: setTieBreakMem; }

.tieBreakMem { grid-area: tieBreakMem; }

.player_1_points { grid-area: player_1_points; }

.player_2_points { grid-area: player_2_points; }

.player_1_sets { grid-area: player_1_sets; }

.player_2_sets { grid-area: player_2_sets; }

.player_1_games { grid-area: player_1_games; }

.player_2_games { grid-area: player_2_games; }

